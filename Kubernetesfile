pipeline {
  agent any
  options {
      // Keep the 10 most recent builds
      buildDiscarder(logRotator(numToKeepStr:'10'))
  }
  tools {
      maven 'jenkins-maven'
      jdk 'jdk-16'
  }
  environment {
          DEMO = 'Mvn'
          // Set the path to your kubeconfig file
          KUBECONFIG = './config' // Replace with the actual path to your kubeconfig file
      }
  stages {
    stage ('Initialize') {
        steps {
            bat "echo %PATH%"
            echo "${env.GIT_BRANCH}"
        }
    }
    stage ('Stop Pods') {
        steps {
          bat 'kubectl delete -f service.yaml'
          bat 'kubectl delete -f deployment.yaml'
        }
    }
    stage ('Test') {
        steps {
            bat 'mvn -Dmaven.test.failure.ignore=true test'
        }
        post {
            success {
                junit 'target/surefire-reports/**/*.xml'
            }
        }
    }
    stage ('Build') {
        steps {
            bat 'mvn -Dskip.tests=true package'
        }

    }
    stage ('Start Pods') {
        steps {
            bat 'docker build -t springboot-k8s-example:1.0 .'
            bat 'kubectl apply -f deployment.yaml'
            bat 'kubectl apply -f service.yaml'
            bat 'docker-compose up -d --build'
        }
    }
//     stage('Finalize') {
//       steps {
//         bat 'echo "Finalizing"'
//       }
//       post{
//         always {
//           mail bcc: '', body: 'Pipeline has been succesfully executed ', cc: '', from: 'cornelius.broekhuis@capgemini.com', replyTo: 'cornelius.broekhuis@capgemini.com', subject: 'Pipeline has been succesfully executed ', to: 'cornelius.broekhuis@capgemini.com'
//         }
//       }
//     }

  }
}